import * as mongoose from "mongoose";
import * as dotenv from "dotenv";
import * as bluebird from "bluebird";
import * as rp from "request-promise";

//12085681
dotenv.config();

var schema = new mongoose.Schema({ _id: 'Number', resumo1: 'string', resumo2: 'string', resumo3: 'string', resumo4: 'string' });
const aletaModel = mongoose.model('aleta_textos', schema);

const app = (async () => {
  //const qtd = await aletaModel.count(process.env.FILTRO_TESTE ? { _id: process.env.FILTRO_TESTE } : {remumo1: });
  
  const qtd = 24210//6248508 // quantos foram processados = 6248550 6281641
  let i = 0
  const limit = 50//qtd / 10000
  let lastId = 12332621 // ultimo id :26296033     não foi ate o final esse é o ultimo codigo =26552281
  let lastIdBase = 27753172

  while (i < qtd) {
    const aletas = await aletaModel
    .find({ _id: { $gt: lastId , $lt : lastIdBase} })
    .limit(limit);
    //.find({ _id: 12357125 })

    const promise = aletas.map(async (aleta) => {
      if (aleta.resumo1) {

        const novoResumo = aleta.resumo1!
          .replace(/&NBSP;/g, '&nbsp;')
          .replace(/<br>/g, '<BR>')
          .replace(/<br \/>/g, '<BR>')
          .replace(/\r\n/g, '<BR>')
          .replace(/<BR>+(?=<BR><BR>)/g, '')
          .replace(/<\/p><BR><BR><p>/g, '<BR>')
          .replace(/<BR>+(?=<BR><BR>)/g, '')
          .replace(/&ATILDE;/g, '&Atilde;')
          .replace(/&APOS;/g, '&apos;')
          .replace(/&AMP;/g, '&amp;')
          .replace(/&LT;/g, '&lt;')
          .replace(/&GT;/g, '&gt;')
          .replace(/&IEXCL;/g, '&iexcl;')
          .replace(/&CENT;/g, '&cent;')
          .replace(/&POUND;/g, '&pound;')
          .replace(/&CURREN;/g, '&curren;')
          .replace(/&YEN;/g, '&yen;')
          .replace(/&BRVBAR;/g, '&brvbar;')
          .replace(/&SECT;/g, '&sect;')
          .replace(/&UML;/g, '&uml;')
          .replace(/&COPY;/g, '&copy;')
          .replace(/&ORDF;/g, '&ordf;')
          .replace(/&LAQUO;/g, '&laquo;')
          .replace(/&NOT;/g, '&not;')
          .replace(/&SHY;/g, '&shy;')
          .replace(/&REG;/g, '&reg;')
          .replace(/&MACR;/g, '&macr;')
          .replace(/&DEG;/g, '&deg;')
          .replace(/&PLUSMN;/g, '&plusmn;')
          .replace(/&SUP2;/g, '&sup2;')
          .replace(/&SUP3;/g, '&sup3;')
          .replace(/&ACUTE;/g, '&acute;')
          .replace(/&MICRO;/g, '&micro;')
          .replace(/&PARA;/g, '&para;')
          .replace(/&MIDDOT;/g, '&middot;')
          .replace(/&CEDIL;/g, '&cedil;')
          .replace(/&SUP1;/g, '&sup1;')
          .replace(/&ORDM;/g, '&ordm;')
          .replace(/&RAQUO;/g, '&raquo;')
          .replace(/&FRAC14;/g, '&frac14;')
          .replace(/&FRAC12;/g, '&frac12;')
          .replace(/&FRAC34;/g, '&frac34;')
          .replace(/&IQUEST;/g, '&iquest;')
          .replace(/&TIMES;/g, '&times;')
          .replace(/&DIVIDE;/g, '&divide;')
          .replace(/&AGRAVE;/g, '&Agrave;')
          .replace(/&AACUTE;/g, '&Aacute;')
          .replace(/&ACIRC;/g, '&Acirc;')
          .replace(/&AUML;/g, '&Auml;')
          .replace(/&ARING;/g, '&Aring;')
          .replace(/&AELIG;/g, '&AElig;')
          .replace(/&CCEDIL;/g, '&Ccedil;')
          .replace(/&EGRAVE;/g, '&Egrave;')
          .replace(/&EACUTE;/g, '&Eacute;')
          .replace(/&ECIRC;/g, '&Ecirc;')
          .replace(/&EUML;/g, '&Euml;')
          .replace(/&IGRAVE;/g, '&Igrave;')
          .replace(/&IACUTE;/g, '&Iacute;')
          .replace(/&ICIRC;/g, '&Icirc;')
          .replace(/&IUML;/g, '&Iuml;')
          .replace(/&ETH;/g, '&ETH;')
          .replace(/&NTILDE;/g, '&Ntilde;')
          .replace(/&OGRAVE;/g, '&Ograve;')
          .replace(/&OACUTE;/g, '&Oacute;')
          .replace(/&OCIRC;/g, '&Ocirc;')
          .replace(/&OTILDE;/g, '&Otilde;')
          .replace(/&OUML;/g, '&Ouml;')
          .replace(/&OSLASH;/g, '&Oslash;')
          .replace(/&UGRAVE;/g, '&Ugrave;')
          .replace(/&UACUTE;/g, '&Uacute;')
          .replace(/&UCIRC;/g, '&Ucirc;')
          .replace(/&UUML;/g, '&Uuml;')
          .replace(/&YACUTE;/g, '&Yacute;')
          .replace(/&THORN;/g, '&THORN;')
          .replace(/&SZLIG;/g, '&szlig;')
          .replace(/&AGRAVE;/g, '&agrave;')
          .replace(/&AACUTE;/g, '&aacute;')
          .replace(/&ACIRC;/g, '&acirc;')
          .replace(/&ATILDE;/g, '&atilde;')
          .replace(/&AUML;/g, '&auml;')
          .replace(/&ARING;/g, '&aring;')
          .replace(/&AELIG;/g, '&aelig;')
          .replace(/&CCEDIL;/g, '&ccedil;')
          .replace(/&EGRAVE;/g, '&egrave;')
          .replace(/&EACUTE;/g, '&eacute;')
          .replace(/&ECIRC;/g, '&ecirc;')
          .replace(/&EUML;/g, '&euml;')
          .replace(/&IGRAVE;/g, '&igrave;')
          .replace(/&IACUTE;/g, '&iacute;')
          .replace(/&ICIRC;/g, '&icirc;')
          .replace(/&IUML;/g, '&iuml;')
          .replace(/&ETH;/g, '&eth;')
          .replace(/&NTILDE;/g, '&ntilde;')
          .replace(/&OGRAVE;/g, '&ograve;')
          .replace(/&OACUTE;/g, '&oacute;')
          .replace(/&OCIRC;/g, '&ocirc;')
          .replace(/&OTILDE;/g, '&otilde;')
          .replace(/&OUML;/g, '&ouml;')
          .replace(/&OSLASH;/g, '&oslash;')
          .replace(/&UGRAVE;/g, '&ugrave;')
          .replace(/&UACUTE;/g, '&uacute;')
          .replace(/&UCIRC;/g, '&ucirc;')
          .replace(/&UUML;/g, '&uuml;')
          .replace(/&YACUTE;/g, '&yacute;')
          .replace(/&THORN;/g, '&thorn;')
          .replace(/&YUML;/g, '&yuml;')
          .replace(/&LARR;/g, '&larr;')
          .replace(/&UARR;/g, '&uarr;')
          .replace(/&RARR;/g, '&rarr;')
          .replace(/&DARR;/g, '&darr;')
          .replace(/&HARR;/g, '&harr;')
          .replace(/&CRARR;/g, '&crarr;')
          .replace(/&LARR;/g, '&lArr;')
          .replace(/&UARR;/g, '&uArr;')
          .replace(/&RARR;/g, '&rArr;')
          .replace(/&DARR;/g, '&dArr;')
          .replace(/&HARR;/g, '&hArr;')
          .replace(/&amp;NBSP;/g, '&nbsp;')
		      .replace(/&amp;ATILDE;/g, '&Atilde;')
          .replace(/&amp;APOS;/g, '&apos;')
          .replace(/&amp;AMP;/g, '&amp;')
          .replace(/&amp;LT;/g, '&lt;')
          .replace(/&amp;GT;/g, '&gt;')
          .replace(/&amp;IEXCL;/g, '&iexcl;')
          .replace(/&amp;CENT;/g, '&cent;')
          .replace(/&amp;POUND;/g, '&pound;')
          .replace(/&amp;CURREN;/g, '&curren;')
          .replace(/&amp;YEN;/g, '&yen;')
          .replace(/&amp;BRVBAR;/g, '&brvbar;')
          .replace(/&amp;SECT;/g, '&sect;')
          .replace(/&amp;UML;/g, '&uml;')
          .replace(/&amp;COPY;/g, '&copy;')
          .replace(/&amp;ORDF;/g, '&ordf;')
          .replace(/&amp;LAQUO;/g, '&laquo;')
          .replace(/&amp;NOT;/g, '&not;')
          .replace(/&amp;SHY;/g, '&shy;')
          .replace(/&amp;REG;/g, '&reg;')
          .replace(/&amp;MACR;/g, '&macr;')
          .replace(/&amp;DEG;/g, '&deg;')
          .replace(/&amp;PLUSMN;/g, '&plusmn;')
          .replace(/&amp;SUP2;/g, '&sup2;')
          .replace(/&amp;SUP3;/g, '&sup3;')
          .replace(/&amp;ACUTE;/g, '&acute;')
          .replace(/&amp;MICRO;/g, '&micro;')
          .replace(/&amp;PARA;/g, '&para;')
          .replace(/&amp;MIDDOT;/g, '&middot;')
          .replace(/&amp;CEDIL;/g, '&cedil;')
          .replace(/&amp;SUP1;/g, '&sup1;')
          .replace(/&amp;ORDM;/g, '&ordm;')
          .replace(/&amp;RAQUO;/g, '&raquo;')
          .replace(/&amp;FRAC14;/g, '&frac14;')
          .replace(/&amp;FRAC12;/g, '&frac12;')
          .replace(/&amp;FRAC34;/g, '&frac34;')
          .replace(/&amp;IQUEST;/g, '&iquest;')
          .replace(/&amp;TIMES;/g, '&times;')
          .replace(/&amp;DIVIDE;/g, '&divide;')
          .replace(/&amp;AGRAVE;/g, '&Agrave;')
          .replace(/&amp;AACUTE;/g, '&Aacute;')
          .replace(/&amp;ACIRC;/g, '&Acirc;')
          .replace(/&amp;AUML;/g, '&Auml;')
          .replace(/&amp;ARING;/g, '&Aring;')
          .replace(/&amp;AELIG;/g, '&AElig;')
          .replace(/&amp;CCEDIL;/g, '&Ccedil;')
          .replace(/&amp;EGRAVE;/g, '&Egrave;')
          .replace(/&amp;EACUTE;/g, '&Eacute;')
          .replace(/&amp;ECIRC;/g, '&Ecirc;')
          .replace(/&amp;EUML;/g, '&Euml;')
          .replace(/&amp;IGRAVE;/g, '&Igrave;')
          .replace(/&amp;IACUTE;/g, '&Iacute;')
          .replace(/&amp;ICIRC;/g, '&Icirc;')
          .replace(/&amp;IUML;/g, '&Iuml;')
          .replace(/&amp;ETH;/g, '&ETH;')
          .replace(/&amp;NTILDE;/g, '&Ntilde;')
          .replace(/&amp;OGRAVE;/g, '&Ograve;')
          .replace(/&amp;OACUTE;/g, '&Oacute;')
          .replace(/&amp;OCIRC;/g, '&Ocirc;')
          .replace(/&amp;OTILDE;/g, '&Otilde;')
          .replace(/&amp;OUML;/g, '&Ouml;')
          .replace(/&amp;OSLASH;/g, '&Oslash;')
          .replace(/&amp;UGRAVE;/g, '&Ugrave;')
          .replace(/&amp;UACUTE;/g, '&Uacute;')
          .replace(/&amp;UCIRC;/g, '&Ucirc;')
          .replace(/&amp;UUML;/g, '&Uuml;')
          .replace(/&amp;YACUTE;/g, '&Yacute;')
          .replace(/&amp;THORN;/g, '&THORN;')
          .replace(/&amp;SZLIG;/g, '&szlig;')
          .replace(/&amp;AGRAVE;/g, '&agrave;')
          .replace(/&amp;AACUTE;/g, '&aacute;')
          .replace(/&amp;ACIRC;/g, '&acirc;')
          .replace(/&amp;ATILDE;/g, '&atilde;')
          .replace(/&amp;AUML;/g, '&auml;')
          .replace(/&amp;ARING;/g, '&aring;')
          .replace(/&amp;AELIG;/g, '&aelig;')
          .replace(/&amp;CCEDIL;/g, '&ccedil;')
          .replace(/&amp;EGRAVE;/g, '&egrave;')
          .replace(/&amp;EACUTE;/g, '&eacute;')
          .replace(/&amp;ECIRC;/g, '&ecirc;')
          .replace(/&amp;EUML;/g, '&euml;')
          .replace(/&amp;IGRAVE;/g, '&igrave;')
          .replace(/&amp;IACUTE;/g, '&iacute;')
          .replace(/&amp;ICIRC;/g, '&icirc;')
          .replace(/&amp;IUML;/g, '&iuml;')
          .replace(/&amp;ETH;/g, '&eth;')
          .replace(/&amp;NTILDE;/g, '&ntilde;')
          .replace(/&amp;OGRAVE;/g, '&ograve;')
          .replace(/&amp;OACUTE;/g, '&oacute;')
          .replace(/&amp;OCIRC;/g, '&ocirc;')
          .replace(/&amp;OTILDE;/g, '&otilde;')
          .replace(/&amp;OUML;/g, '&ouml;')
          .replace(/&amp;OSLASH;/g, '&oslash;')
          .replace(/&amp;UGRAVE;/g, '&ugrave;')
          .replace(/&amp;UACUTE;/g, '&uacute;')
          .replace(/&amp;UCIRC;/g, '&ucirc;')
          .replace(/&amp;UUML;/g, '&uuml;')
          .replace(/&amp;YACUTE;/g, '&yacute;')
          .replace(/&amp;THORN;/g, '&thorn;')
          .replace(/&amp;YUML;/g, '&yuml;')
          .replace(/&amp;LARR;/g, '&larr;')
          .replace(/&amp;UARR;/g, '&uarr;')
          .replace(/&amp;RARR;/g, '&rarr;')
          .replace(/&amp;DARR;/g, '&darr;')
          .replace(/&amp;HARR;/g, '&harr;')
          .replace(/&amp;CRARR;/g, '&crarr;')
          .replace(/&amp;LARR;/g, '&lArr;')
          .replace(/&amp;UARR;/g, '&uArr;')
          .replace(/&amp;RARR;/g, '&rArr;')
          .replace(/&amp;DARR;/g, '&dArr;')
          .replace(/&amp;HARR;/g, '&hArr;');          

        await aletaModel.replaceOne({ _id: aleta._id }, { resumo1: novoResumo, resumo2: aleta.resumo2, resumo3: aleta.resumo3, resumo4: aleta.resumo4 });
      }
      lastId = aleta._id
      i += 1
    })

    await bluebird.all(promise);
    console.log("Ultimo Id:" + lastId);

    console.log(`${i} % ATUALIZADO COM SUCESSO`)
  }
})

const createNewRegisters = (() => {
  const aletaModel = mongoose.model('aleta_textos', schema);

  const arr = [{ _id: 114, resumo1: 'sfjaklçkszjgzxlçjxzoljxaklbvsablxkzg,sdz</p><BR><BR><BR><BR><p>' },
  { _id: 115, resumo1: 'sfjaklçkszjgzxlçjxzoljxaklbvsablxkzg,sdz</p><BR><BR><BR><BR><p>' }]

  aletaModel.insertMany(arr);
})

mongoose.connect(process.env.MONGODB_CONN, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(async () => {
    console.log('Succesfully Connected to Mongo! - Version 1.3')
    console.log('🚀 APLICATIVO INICIADO...')
    await app()
    console.log('OBJETOS ATUALIZADOS COM SUCESSO')

  })
  .catch(err => console.log(`Error Connection Mongo:${err}`));

